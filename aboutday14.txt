Day14
Along with quizUserPostComment
@JsonIgnore
Getting particular users post and comment through method its like a query
HATEOAS-Hypermedia As The Engine of Application Sate
Navigation based question also
#Hint 
package lk.ac.vau.Model;

import java.util.ArrayList;
import java.util.List;

import javax.persistence.Entity;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.Transient;
import javax.xml.bind.annotation.XmlRootElement;

import com.fasterxml.jackson.annotation.JsonIgnore;

@XmlRootElement
@Entity
public class User {
	@Id
	private String UserId;
	private String Email;
	private String FirstName;
	private String lastName;
	private int age;
	@Transient
	private List<Link>links=new ArrayList<Link>();
	@OneToMany(mappedBy = "Owner")
	private List<Post>posts;
	@OneToMany(mappedBy = "CommentedBy")
	private List<Comment>comments;
	public User() {

	}
	public User(String userId, String email, String firstName, String lastName, int age, List<Post> posts,
			List<Comment> comments) {
		super();
		UserId = userId;
		Email = email;
		FirstName = firstName;
		this.lastName = lastName;
		this.age = age;
		this.posts = posts;
		this.comments = comments;
	}
	public String getUserId() {
		return UserId;
	}
	public void setUserId(String userId) {
		UserId = userId;
	}
	public String getEmail() {
		return Email;
	}
	public void setEmail(String email) {
		Email = email;
	}
	public String getFirstName() {
		return FirstName;
	}
	public void setFirstName(String firstName) {
		FirstName = firstName;
	}
	public String getLastName() {
		return lastName;
	}
	public void setLastName(String lastName) {
		this.lastName = lastName;
	}
	public int getAge() {
		return age;
	}
	public void setAge(int age) {
		this.age = age;
	}
	@JsonIgnore
	public List<Post> getPosts() {
		return posts;
	}
	public void setPosts(List<Post> posts) {
		this.posts = posts;
	}
	@JsonIgnore
	public List<Comment> getComments() {
		return comments;
	}
	public void setComments(List<Comment> comments) {
		this.comments = comments;
	}
	public List<Link> getLinks() {
		return links;
	}
	public void setLinks(List<Link> links) {
		this.links = links;
	}
	
	public void addLink(String uri, String rel) {
		Link link=new Link(uri,rel);
		links.add(link);
	}
	
}


package lk.ac.vau.Model;

public class Link {
	private String URL;
	private String rel;
	public Link(String uRL, String rel) {
		super();
		URL = uRL;
		this.rel = rel;
	}
	public String getURL() {
		return URL;
	}
	public void setURL(String uRL) {
		URL = uRL;
	}
	public String getRel() {
		return rel;
	}
	public void setRel(String rel) {
		this.rel = rel;
	}
	
	

}

package lk.ac.vau.Controller;

import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;
import static org.springframework.hateoas.server.mvc.WebMvcLinkBuilder.*;

import lk.ac.vau.Model.Comment;
import lk.ac.vau.Model.Post;
import lk.ac.vau.Model.User;
import lk.ac.vau.Repo.UserRepo;

@RestController
@RequestMapping("/user")
public class UserController {
	@Autowired
	UserRepo context;

	@GetMapping
	public List<User> getAll() {
		return context.findAll();
	}

	@GetMapping("/{id}")
	public User get(@PathVariable("id") String id) {
		//http://localhost:8080/user/uid1101/post
		String postUrl= linkTo(UserController.class).slash(id).slash("post").toString();
		//http://localhost:8080/user/uid1101/comment
		String commentUrl= linkTo(UserController.class).slash(id).slash("comment").toString();
		User user =context.findById(id).get();
		user.addLink(postUrl, "Post");
		user.addLink(commentUrl, "Comment");
		return user;
	}

	@PostMapping
	public void add(@RequestBody User user) {
		context.save(user);
	}

	@PutMapping
	public void update(@RequestBody User user) {
		context.save(user);
	}

	@DeleteMapping("/{id}")
	public void delete(@PathVariable("id") String id) {
		context.deleteById(id);
	}
	
	@GetMapping("/{id}/post")
	public List<Post> getPost(@PathVariable("id") String id) {
		return context.findById(id).get().getPosts();
	}
	
	@GetMapping("/{id}/comment")
	public List<Comment> getComment(@PathVariable("id") String id) {
		return context.findById(id).get().getComments();
	}
	//HATEOAS - Hypermedia As The Engine Of Application Sate
	
	
	
}

<dependency>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-hateoas</artifactId>
</dependency>


GIT

echo "# x" >> README.md
git init
git add README.md
git commit -m "first commit"
git branch -M main
git remote add origin https://github.com/amuthakuna/x.git
git push -u origin main


https://github.com/amuthakuna/ICT4191.git